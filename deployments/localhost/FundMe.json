{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "MINIMUM_USD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "yourPay",
          "type": "uint256"
        }
      ],
      "name": "FundeMe_PayMoreEth",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xa8dbc6bc3e1b71dc38b21ddd23a0fd6367f242afd81ad8d45eae6eb85a251e47",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1108090",
    "logsBloom": "0x
    "blockHash": "0x815a66bf4ae8db2bb88cb1cec8de66a421e129dc38a65f50e85b4f788e0bb1cc",
    "transactionHash": "0xa8dbc6bc3e1b71dc38b21ddd23a0fd6367f242afd81ad8d45eae6eb85a251e47",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1108090",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "b614f81fcad181796c966b0caba023bf",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"MINIMUM_USD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yourPay\",\"type\":\"uint256\"}],\"name\":\"FundeMe_PayMoreEth\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n/*\\n errors \\n*/\\nerror FundMe__NotOwner();\\nerror FundeMe_PayMoreEth(uint256 MINIMUM_USD, uint256 yourPay);\\n\\ncontract FundMe {\\n    // Type declarations\\n    using PriceConverter for uint256;\\n\\n    /*\\n     state variables \\n    */\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n\\n    address[] private s_funders;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    /*\\n     constructor \\n    */\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    /*\\n     functions\\n    */\\n    function fund() public payable {\\n        if (msg.value.getConversionRate(s_priceFeed) <= MINIMUM_USD) {\\n            revert FundeMe_PayMoreEth(MINIMUM_USD, msg.value);\\n        }\\n        // require(\\n        //     msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n        //     \\\"You need to spend more ETH!\\\"\\n        // );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mappings can't be in memory\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            // resetting mapping here\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success, \\\"\\\");\\n    }\\n\\n    /*\\n     getter functions\\n    */\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 _index) public view returns (address) {\\n        return s_funders[_index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address _funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[_funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        // ETH/USD price feed address of Goerli Network.\\n\\n        return s_priceFeed.version();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n}\\n\\n// Functions Orders\\n// constructor\\n// receive\\n// fallback\\n// external\\n// public\\n// internal\\n// private\\n// view / pure\\n\",\"keccak256\":\"0x0ddfb3de1afbc1b36cca68fb24864320b0f192f0de0b463bf0fc6ce4666869ed\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Goerli ETH / USD Address\\n        // http://docs.chain.link/docs/ethereum-addresses/\\n\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xd402b860638b63e9878ae25ef0f33d47d5c165324444ee765aabb8f63ea86fe8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200143538038062001435833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6112af620001866000396000818161042b0152818161067a015281816106ca01526108c001526112af6000f3fe60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e81461014d5780639e87a5cd14610178578063b60d4288146101a3578063be2693f0146101ad578063d7b4750c146101b757610099565b80630343fb25146100a35780630d8e6e2c146100e05780633ccfd60b1461010b5780636b69a5921461012257610099565b36610099576100976101f4565b005b6100a16101f4565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610bba565b61033a565b6040516100d79190610c00565b60405180910390f35b3480156100ec57600080fd5b506100f5610382565b6040516101029190610c00565b60405180910390f35b34801561011757600080fd5b50610120610429565b005b34801561012e57600080fd5b50610137610669565b6040516101449190610c00565b60405180910390f35b34801561015957600080fd5b50610162610676565b60405161016f9190610c2a565b60405180910390f35b34801561018457600080fd5b5061018d61069e565b60405161019a9190610ca4565b60405180910390f35b6101ab6101f4565b005b6101b56106c8565b005b3480156101c357600080fd5b506101de60048036038101906101d99190610ceb565b61098c565b6040516101eb9190610c2a565b60405180910390f35b6802b5e3af16b1880000610233600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109d490919063ffffffff16565b11610280576802b5e3af16b1880000346040517fbd352346000000000000000000000000000000000000000000000000000000008152600401610277929190610d18565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ce9190610d70565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103ec57600080fd5b505afa158015610400573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104249190610ddb565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104ae576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610559576000600182815481106104d4576104d3610e08565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061055190610e37565b9150506104b1565b50600067ffffffffffffffff81111561057557610574610e80565b5b6040519080825280602002602001820160405280156105a35781602001602082028036833780820191505090505b50600190805190602001906105b9929190610ab0565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105e090610ee0565b60006040518083038185875af1925050503d806000811461061d576040519150601f19603f3d011682016040523d82523d6000602084013e610622565b606091505b5050905080610666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065d90610f52565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461074d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107d157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610787575b5050505050905060005b815181101561085b5760008282815181106107f9576107f8610e08565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061085390610e37565b9150506107db565b50600067ffffffffffffffff81111561087757610876610e80565b5b6040519080825280602002602001820160405280156108a55781602001602082028036833780820191505090505b50600190805190602001906108bb929190610ab0565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161090290610ee0565b60006040518083038185875af1925050503d806000811461093f576040519150601f19603f3d011682016040523d82523d6000602084013e610944565b606091505b5050905080610988576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097f90610f95565b60405180910390fd5b5050565b6000600182815481106109a2576109a1610e08565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109e083610a10565b90506000670de0b6b3a764000085836109f99190610fb5565b610a03919061103e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a5957600080fd5b505afa158015610a6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9191906110e7565b5050509150506402540be40081610aa89190611162565b915050919050565b828054828255906000526020600020908101928215610b29579160200282015b82811115610b285782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610ad0565b5b509050610b369190610b3a565b5090565b5b80821115610b53576000816000905550600101610b3b565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8782610b5c565b9050919050565b610b9781610b7c565b8114610ba257600080fd5b50565b600081359050610bb481610b8e565b92915050565b600060208284031215610bd057610bcf610b57565b5b6000610bde84828501610ba5565b91505092915050565b6000819050919050565b610bfa81610be7565b82525050565b6000602082019050610c156000830184610bf1565b92915050565b610c2481610b7c565b82525050565b6000602082019050610c3f6000830184610c1b565b92915050565b6000819050919050565b6000610c6a610c65610c6084610b5c565b610c45565b610b5c565b9050919050565b6000610c7c82610c4f565b9050919050565b6000610c8e82610c71565b9050919050565b610c9e81610c83565b82525050565b6000602082019050610cb96000830184610c95565b92915050565b610cc881610be7565b8114610cd357600080fd5b50565b600081359050610ce581610cbf565b92915050565b600060208284031215610d0157610d00610b57565b5b6000610d0f84828501610cd6565b91505092915050565b6000604082019050610d2d6000830185610bf1565b610d3a6020830184610bf1565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d7b82610be7565b9150610d8683610be7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dbb57610dba610d41565b5b828201905092915050565b600081519050610dd581610cbf565b92915050565b600060208284031215610df157610df0610b57565b5b6000610dff84828501610dc6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e4282610be7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e7557610e74610d41565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610eca600083610eaf565b9150610ed582610eba565b600082019050919050565b6000610eeb82610ebd565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610f3c600b83610ef5565b9150610f4782610f06565b602082019050919050565b60006020820190508181036000830152610f6b81610f2f565b9050919050565b6000610f7f600083610ef5565b9150610f8a82610eba565b600082019050919050565b60006020820190508181036000830152610fae81610f72565b9050919050565b6000610fc082610be7565b9150610fcb83610be7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561100457611003610d41565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061104982610be7565b915061105483610be7565b9250826110645761106361100f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61108e8161106f565b811461109957600080fd5b50565b6000815190506110ab81611085565b92915050565b6000819050919050565b6110c4816110b1565b81146110cf57600080fd5b50565b6000815190506110e1816110bb565b92915050565b600080600080600060a0868803121561110357611102610b57565b5b60006111118882890161109c565b9550506020611122888289016110d2565b945050604061113388828901610dc6565b935050606061114488828901610dc6565b92505060806111558882890161109c565b9150509295509295909350565b600061116d826110b1565b9150611178836110b1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156111b7576111b6610d41565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156111f4576111f3610d41565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561123157611230610d41565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561126e5761126d610d41565b5b82820290509291505056fea26469706673582212207858e0e71425eb2fda47d2fe7dbbf3bb018ad99698b981af229e00196b02969a64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e81461014d5780639e87a5cd14610178578063b60d4288146101a3578063be2693f0146101ad578063d7b4750c146101b757610099565b80630343fb25146100a35780630d8e6e2c146100e05780633ccfd60b1461010b5780636b69a5921461012257610099565b36610099576100976101f4565b005b6100a16101f4565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610bba565b61033a565b6040516100d79190610c00565b60405180910390f35b3480156100ec57600080fd5b506100f5610382565b6040516101029190610c00565b60405180910390f35b34801561011757600080fd5b50610120610429565b005b34801561012e57600080fd5b50610137610669565b6040516101449190610c00565b60405180910390f35b34801561015957600080fd5b50610162610676565b60405161016f9190610c2a565b60405180910390f35b34801561018457600080fd5b5061018d61069e565b60405161019a9190610ca4565b60405180910390f35b6101ab6101f4565b005b6101b56106c8565b005b3480156101c357600080fd5b506101de60048036038101906101d99190610ceb565b61098c565b6040516101eb9190610c2a565b60405180910390f35b6802b5e3af16b1880000610233600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109d490919063ffffffff16565b11610280576802b5e3af16b1880000346040517fbd352346000000000000000000000000000000000000000000000000000000008152600401610277929190610d18565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ce9190610d70565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103ec57600080fd5b505afa158015610400573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104249190610ddb565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104ae576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610559576000600182815481106104d4576104d3610e08565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061055190610e37565b9150506104b1565b50600067ffffffffffffffff81111561057557610574610e80565b5b6040519080825280602002602001820160405280156105a35781602001602082028036833780820191505090505b50600190805190602001906105b9929190610ab0565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105e090610ee0565b60006040518083038185875af1925050503d806000811461061d576040519150601f19603f3d011682016040523d82523d6000602084013e610622565b606091505b5050905080610666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065d90610f52565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461074d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107d157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610787575b5050505050905060005b815181101561085b5760008282815181106107f9576107f8610e08565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061085390610e37565b9150506107db565b50600067ffffffffffffffff81111561087757610876610e80565b5b6040519080825280602002602001820160405280156108a55781602001602082028036833780820191505090505b50600190805190602001906108bb929190610ab0565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161090290610ee0565b60006040518083038185875af1925050503d806000811461093f576040519150601f19603f3d011682016040523d82523d6000602084013e610944565b606091505b5050905080610988576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097f90610f95565b60405180910390fd5b5050565b6000600182815481106109a2576109a1610e08565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109e083610a10565b90506000670de0b6b3a764000085836109f99190610fb5565b610a03919061103e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a5957600080fd5b505afa158015610a6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9191906110e7565b5050509150506402540be40081610aa89190611162565b915050919050565b828054828255906000526020600020908101928215610b29579160200282015b82811115610b285782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610ad0565b5b509050610b369190610b3a565b5090565b5b80821115610b53576000816000905550600101610b3b565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8782610b5c565b9050919050565b610b9781610b7c565b8114610ba257600080fd5b50565b600081359050610bb481610b8e565b92915050565b600060208284031215610bd057610bcf610b57565b5b6000610bde84828501610ba5565b91505092915050565b6000819050919050565b610bfa81610be7565b82525050565b6000602082019050610c156000830184610bf1565b92915050565b610c2481610b7c565b82525050565b6000602082019050610c3f6000830184610c1b565b92915050565b6000819050919050565b6000610c6a610c65610c6084610b5c565b610c45565b610b5c565b9050919050565b6000610c7c82610c4f565b9050919050565b6000610c8e82610c71565b9050919050565b610c9e81610c83565b82525050565b6000602082019050610cb96000830184610c95565b92915050565b610cc881610be7565b8114610cd357600080fd5b50565b600081359050610ce581610cbf565b92915050565b600060208284031215610d0157610d00610b57565b5b6000610d0f84828501610cd6565b91505092915050565b6000604082019050610d2d6000830185610bf1565b610d3a6020830184610bf1565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d7b82610be7565b9150610d8683610be7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dbb57610dba610d41565b5b828201905092915050565b600081519050610dd581610cbf565b92915050565b600060208284031215610df157610df0610b57565b5b6000610dff84828501610dc6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e4282610be7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e7557610e74610d41565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610eca600083610eaf565b9150610ed582610eba565b600082019050919050565b6000610eeb82610ebd565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610f3c600b83610ef5565b9150610f4782610f06565b602082019050919050565b60006020820190508181036000830152610f6b81610f2f565b9050919050565b6000610f7f600083610ef5565b9150610f8a82610eba565b600082019050919050565b60006020820190508181036000830152610fae81610f72565b9050919050565b6000610fc082610be7565b9150610fcb83610be7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561100457611003610d41565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061104982610be7565b915061105483610be7565b9250826110645761106361100f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61108e8161106f565b811461109957600080fd5b50565b6000815190506110ab81611085565b92915050565b6000819050919050565b6110c4816110b1565b81146110cf57600080fd5b50565b6000815190506110e1816110bb565b92915050565b600080600080600060a0868803121561110357611102610b57565b5b60006111118882890161109c565b9550506020611122888289016110d2565b945050604061113388828901610dc6565b935050606061114488828901610dc6565b92505060806111558882890161109c565b9150509295509295909350565b600061116d826110b1565b9150611178836110b1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156111b7576111b6610d41565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156111f4576111f3610d41565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561123157611230610d41565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561126e5761126d610d41565b5b82820290509291505056fea26469706673582212207858e0e71425eb2fda47d2fe7dbbf3bb018ad99698b981af229e00196b02969a64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 79,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}